Traceback (most recent call last):
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\jupyter_cache\executors\utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "D:\ProgramData\Anaconda3\lib\asyncio\base_events.py", line 587, in run_until_complete
    return future.result()
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# random numpy array
array = np.random.rand(2,2)
print("{} {}\n".format(type(array),array))

# from numpy to tensor
from_numpy_to_tensor = torch.from_numpy(array)
print("{}\n".format(from_numpy_to_tensor))

# from tensor to numpy
tensor = from_numpy_to_tensor
from_tensor_to_numpy = tensor.numpy()
print("{} {}\n".format(type(from_tensor_to_numpy),from_tensor_to_numpy))

### Basic Math with Pytorch
- Resize: view()
- a and b are tensor.
- Addition: torch.add(a,b) = a + b
- Subtraction: a.sub(b) = a - b
- Element wise multiplication: torch.mul(a,b) = a * b 
- Element wise division: torch.div(a,b) = a / b 
- Mean: a.mean()
- Standart Deviation (std): a.std()
------------------

[1;36m  File [1;32m"<ipython-input-7-eaafb792d8a9>"[1;36m, line [1;32m16[0m
[1;33m    - a and b are tensor.[0m
[1;37m                ^[0m
[1;31mSyntaxError[0m[1;31m:[0m invalid syntax

SyntaxError: invalid syntax (<ipython-input-7-eaafb792d8a9>, line 16)

