Traceback (most recent call last):
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\jupyter_cache\executors\utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "D:\ProgramData\Anaconda3\lib\asyncio\base_events.py", line 587, in run_until_complete
    return future.result()
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\msipc\AppData\Roaming\Python\Python37\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# import variable from pytorch library
from torch.autograd import Variable

# define variable
var = Variable(torch.ones(3), requires_grad = True)
var

- Assume we have equation y = x^2
- Define x = [2,4] variable
- After calculation we find that y = [4,16] (y = x^2)
- Recap o equation is that o = (1/2)*sum(y) = (1/2)*sum(x^2)
- deriavative of o = x
- Result is equal to x so gradients are [2,4]
- Lets implement

# lets make basic backward propagation
# we have an equation that is y = x^2
array = [2,4]
tensor = torch.Tensor(array)
x = Variable(tensor, requires_grad = True)
y = x**2
print(" y =  ",y)

# recap o equation o = 1/2*sum(y)
o = (1/2)*sum(y)
print(" o =  ",o)

# backward
o.backward() # calculates gradients

# As I defined, variables accumulates gradients. In this part there is only one variable x.
# Therefore variable x should be have gradients
# Lets look at gradients with x.grad
print("gradients: ",x.grad)
------------------

[1;36m  File [1;32m"<ipython-input-8-5168fbb567b3>"[1;36m, line [1;32m8[0m
[1;33m    - Assume we have equation y = x^2[0m
[1;37m              ^[0m
[1;31mSyntaxError[0m[1;31m:[0m invalid syntax

SyntaxError: invalid syntax (<ipython-input-8-5168fbb567b3>, line 8)

